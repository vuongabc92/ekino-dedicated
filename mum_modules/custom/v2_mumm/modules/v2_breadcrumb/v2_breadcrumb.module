<?php

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

function v2_breadcrumb_get_breadcrumb($path) {
  global $language;
  $breadcrumb = array();
  if (is_object($path)) {
    $node = $path;
    $type = $node->type;

    $category = '';
    $menuTrail = v2_breadrumb_menu_set_active_trail("node/$node->nid", 'menu-new-main-menu');
    foreach ($menuTrail as $key => $menu_items) {
      if (isset($menu_items['options']['query']) || isset($menu_items['options']['fragment'])) {
        $menuTrail[$key]['link_path'] = $menuTrail[$key]['link_path'] . '?filter=' . $menu_items['options']['query']['filter'];
        if (isset($menu_items['options']['query']['filter'])) {
          $menuTrail[$key]['href'] = $menuTrail[$key]['href'] . '?filter=' . $menu_items['options']['query']['filter'];
        }
        if (isset($menu_items['options']['fragment'])) {
          $menuTrail[$key]['href'] = $menuTrail[$key]['href'] . '?filter=' . $menu_items['options']['fragment'];
        }
      }
    }
    foreach ($menuTrail as $key => $menu_items) {
      if ($node->type == 'modular_page' && (isset($menu_items['options']['query']) || isset($menu_items['options']['fragment']))) {
        unset($menuTrail[$key]);
      }
    }
    if ($menuTrail[0]['link_path'] !== 'node/%') {
      array_pop($menuTrail);
      foreach ($menuTrail as $menuterm) {
        $breadcrumb[] = '<a href="/' . $language->prefix . '/' . $menuterm['href'] . '" title="' . $menuterm['link_title'] . '"><span itemprop="name">' . t($menuterm['title']) . '</span></a>';
      }

      switch ($type) {
        case 'champagne_ritual':
          $field_ritual_number = field_get_items('node', $node, 'field_ritual_number');
          $field_ritual_number = !empty($field_ritual_number[0]['value']) ? $field_ritual_number[0]['value'] : '';
          $category_name_champagne_ritural = _hs_resource_get('n째','plain', FALSE, FALSE, FALSE, 'N째'). $field_ritual_number;
          $class_breadcrumb = count($breadcrumb) > 0 ? 'class="text"' : '';
          $node_title_number = hs_resource_contextual_link('n째','<span '.$class_breadcrumb.' itemprop="name">'.$category_name_champagne_ritural . ' - ' . $node->title.'</span>','tip-contextualink');
          $breadcrumb[] = $node_title_number;

          break;

        case 'product_champagne':
          $field_prefix = isset($node->field_champagne_brand[LANGUAGE_NONE][0]['value']) ? $node->field_champagne_brand[LANGUAGE_NONE][0]['value'] : '';
          $class_breadcrumb = count($breadcrumb) > 0 ? 'class="text"' : '';
          $node_title = '<span '.$class_breadcrumb.' itemprop="name">'. $field_prefix . ' ' . $node->title.'</span>';
          $breadcrumb[] = $node_title;
          break;

        default:
          if (count($breadcrumb) == 0) {
          $breadcrumb = array('<span itemprop="name">' . $node->title . '</span>');
          }
          else {
            $breadcrumb[] = '<span class="text" itemprop="name">' . $node->title . '</span>';
          }

          break;
      }
    }
  }
  else {
    $result = db_select('menu_links', 'm')
            ->fields('m', array('mlid', 'menu_name', 'plid'))
            ->condition('m.link_path', $path)
            ->execute()->fetchAll();
    $menuTrail = array();
    $menuTrail = v2_breadrumb_menu_set_active_trail($path, 'menu-new-main-menu');
    foreach ($menuTrail as $key => $menu_items) {
      if (isset($menu_items['options']['query']) || isset($menu_items['options']['fragment'])) {
        $menuTrail[$key]['link_path'] = $menuTrail[$key]['link_path'] . '?filter=' . $menu_items['options']['query']['filter'];
        if (isset($menu_items['options']['query']['filter'])) {
          $menuTrail[$key]['href'] = $menuTrail[$key]['href'] . '?filter=' . $menu_items['options']['query']['filter'];
        }
        if (isset($menu_items['options']['fragment'])) {
          $menuTrail[$key]['href'] = $menuTrail[$key]['href'] . '?filter=' . $menu_items['options']['fragment'];
        }
      }
    }
    if ($menuTrail[0]['link_path']) {
      array_pop($menuTrail);
      foreach ($menuTrail as $menu_item) {
        //$menu_parent = l(t($menu_item['link_title']), $menu_item['link_path']);
        $menu_parent = '<a href="/' . $language->prefix . '/' . $menu_item['link_path'] . '">' . t($menu_item['link_title']) . '</a>';
        $breadcrumb[] = $menu_parent;
      }
      if (count($breadcrumb) == 0) {
        $breadcrumb = array('<span itemprop="name">' . drupal_get_title() . '</span>');
      }
      else {
        $breadcrumb[] = '<span class="text" itemprop="name">' . drupal_get_title() . '</span>';
      }
    }
  }
  drupal_set_breadcrumb($breadcrumb);
}

function v2_segment_path($path) {
  global $language;
  $breadcrumb = array();
  if (is_object($path)) {
    $node = $path;
    $type = $node->type;

    $category = '';
    $menuTrail = v2_breadrumb_menu_set_active_trail("node/$node->nid", 'menu-new-main-menu');
    foreach ($menuTrail as $key => $menu_items) {
      if (isset($menu_items['options']['query']) || isset($menu_items['options']['fragment'])) {
        $menuTrail[$key]['link_path'] = $menuTrail[$key]['link_path'] . '?filter=' . $menu_items['options']['query']['filter'];
        if (isset($menu_items['options']['query']['filter'])) {
          $menuTrail[$key]['href'] = $menuTrail[$key]['href'] . '?filter=' . $menu_items['options']['query']['filter'];
        }
        if (isset($menu_items['options']['fragment'])) {
          $menuTrail[$key]['href'] = $menuTrail[$key]['href'] . '?filter=' . $menu_items['options']['fragment'];
        }
      }
    }
    foreach ($menuTrail as $key => $menu_items) {
      if ($node->type == 'modular_page' && (isset($menu_items['options']['query']) || isset($menu_items['options']['fragment']))) {
        unset($menuTrail[$key]);
      }
    }
    if ($menuTrail[0]['link_path'] !== 'node/%') {
      array_pop($menuTrail);
      foreach ($menuTrail as $menuterm) {
        $breadcrumb[] = t($menuterm['title']);
      }
      switch ($type) {
        case 'champagne_ritual':
          $field_ritual_number = field_get_items('node', $node, 'field_ritual_number');
          $field_ritual_number = !empty($field_ritual_number[0]['value']) ? $field_ritual_number[0]['value'] : '';
          $category_name_champagne_ritural = t('n째') . $field_ritual_number;
          $node->title = isset($category_name_champagne_ritural) ? $category_name_champagne_ritural . ' - ' . $node->title : $node->title;
          break;

        case 'product_champagne':
          $field_prefix = isset($node->field_champagne_brand[LANGUAGE_NONE][0]['value']) ? $node->field_champagne_brand[LANGUAGE_NONE][0]['value'] : '';
          $node->title = isset($field_prefix) ? $field_prefix . ' - ' . $node->title : $node->title;
          break;

        default:
          break;
      }

      if (count($breadcrumb) == 0) {
        $breadcrumb = array($node->title);
      }
      else {
        $breadcrumb[] = $node->title;
      }
    }
  }
  else {
    $result = db_select('menu_links', 'm')
            ->fields('m', array('mlid', 'menu_name', 'plid'))
            ->condition('m.link_path', current_path())
            ->execute()->fetchAll();
    $menuTrail = array();
    $menuTrail = v2_breadrumb_menu_set_active_trail(current_path(), 'menu-new-main-menu');
    foreach ($menuTrail as $key => $menu_items) {
      if (isset($menu_items['options']['query']) || isset($menu_items['options']['fragment'])) {
        $menuTrail[$key]['link_path'] = $menuTrail[$key]['link_path'] . '?filter=' . $menu_items['options']['query']['filter'];
        if (isset($menu_items['options']['query']['filter'])) {
          $menuTrail[$key]['href'] = $menuTrail[$key]['href'] . '?filter=' . $menu_items['options']['query']['filter'];
        }
        if (isset($menu_items['options']['fragment'])) {
          $menuTrail[$key]['href'] = $menuTrail[$key]['href'] . '?filter=' . $menu_items['options']['fragment'];
        }
      }
    }
    if ($menuTrail[0]['link_path']) {
      foreach ($menuTrail as $menu_item) {
        //$menu_parent = l(t($menu_item['link_title']), $menu_item['link_path']);
        $menu_parent = t($menu_item['link_title']);
        $breadcrumb[] = $menu_parent;
      }
      if ($menuTrail[0]['depth'] > 1) {
        $breadcrumb[count($menuTrail)] = drupal_get_title();
      }
    }
  }

  return $breadcrumb;
}

function v2_breadrumb_menu_set_active_trail($new_trail = NULL, $menu_name) {
  //$trail = &drupal_static(__FUNCTION__);
  $trail = array();
// Try to retrieve a menu link corresponding to the current path. If more
// than one exists, the link from the most preferred menu is returned.
  $preferred_link = menu_link_get_preferred();
  $current_item = menu_get_item();
// There is a link for the current path.
  if ($preferred_link) {
// Pass TRUE for $only_active_trail to make menu_tree_page_data() build
// a stripped down menu tree containing the active trail only, in case
// the given menu has not been built in this request yet.
    $tree = menu_tree_page_data($menu_name, NULL, TRUE);
    list($key, $curr) = each($tree);
  }
// There is no link for the current path.
  else {
    $preferred_link = $current_item;
    $curr = FALSE;
  }
  while ($curr) {
    $link = $curr['link'];
    if ($link['in_active_trail']) {
// Add the link to the trail, unless it links to its parent.
      if (!($link['type'] & MENU_LINKS_TO_PARENT)) {
// The menu tree for the active trail may contain additional links
// that have not been translated yet, since they contain dynamic
// argument placeholders (%). Such links are not contained in regular
// menu trees, and have only been loaded for the additional
// translation that happens here, so as to be able to display them in
// the breadcumb for the current page.
// @see _menu_tree_check_access()
// @see _menu_link_translate()
        if (strpos($link['href'], '%') !== FALSE) {
          _menu_link_translate($link, TRUE);
        }
        if ($link['access']) {
          $trail[] = $link;
        }
      }
      $tree = $curr['below'] ? $curr['below'] : array();
    }
    list($key, $curr) = each($tree);
  }
// Make sure the current page is in the trail to build the page title, by
// appending either the preferred link or the menu router item for the
// current page. Exclude it if we are on the front page.
  $last = end($trail);
  if ($preferred_link && $last['href'] != $preferred_link['href'] && !drupal_is_front_page()) {
    $trail[] = $preferred_link;
  }
  return $trail;
}

/**
 * Load breabcrumb all page
 */
function v2_breadcrumb_load_breadcrumb($breadcrumbs) {
  $content = '';
  $content .= '<ul itemscope = "" itemtype = "http://schema.org/BreadcrumbList" class = "breadcrumb">';
  $i = 1;
  $total_breadcrumbs = count($breadcrumbs);
  foreach ($breadcrumbs as $breadcrumb) {
    switch ($i) {
      case $i < ($total_breadcrumbs - 1):
        $class = 'item hidden-xs';
        break;
      case $i == ($total_breadcrumbs - 1):
        $class = 'item';
        break;
      case $total_breadcrumbs == $i:
        $class = 'item last-item';
        break;
    }
    $content .= '<li itemprop="itemListElement" itemscope="" itemtype="http://schema.org/ListItem" class="' . $class . '">';
    $content .= $breadcrumb;
    $content .= '<meta itemprop="position" content="' . $i . '">';
    $i++;
    $content .= '</li>';
  }
  $content .= '</ul>';
  return $content;
}
